# # -*- coding: utf-8 -*-
# """
# Created on Thu Dec  9 12:49:10 2021

# @author: maxim
# """

# # r=int(input('r='))
# # a10=int(input('a10='))
# # b10=int(input('b10='))
# # u1=int(input('u1='))
# # u2=int(input('u2='))
# # v1=int(input('v1='))
# # v2=int(input('v2='))
# # u10=int(input('u10='))
# # u20=int(input('u20='))
# # v10=int(input('v10='))
# # v20=int(input('v20='))
# # z1=int(input('z1='))
# # z2=int(input('z2='))


# r=233108530344407544527637656910680524145619812480305449042948611968495918245135782867888369318577116418213919268572658314913060672626911354027609793166341626693946596196427744273886601876896313468704059066746903123910748277606548649151920812699309766587514735456594993207

# a10=61

# b10=51

# u1=3

# u2=5

# v1=7

# v2=9

# u10=-1

# u20=-2

# v10=-3

# v20=-4

# z1=19156834682265296045882928811598077537962830668067924911506837920515934272127269249272897248994102792669926530943099541995655495154775654453350741708839973722667091233841018671130914658505543053369366842060355844730574880878728127387698540944950729490236860453021126758358285122

# z2=28971624

# g=8

# print('u10*u2-u20*u1='+str(u10*u2-u20*u1))
# print('v10*v2-v20*v1='+str(v10*v2-v20*v1))

# f11=(u1*z1+u10)*v1
# f12=(v1*z2+v10)*u1
# f21=(u2*z1+u20)*v2
# f22=(v2*z2+v20)*u2
# f31=(u1*z1+u10)*v2
# f32=(v2*z2+v20)*u1
# f41=(u2*z1+u20)*v1
# f42=(v1*z2+v10)*u2

# #d=int((f32*f11-f31*f12)*(g**2)+(f21*f12+f31*f42-f32*f41-f22*f11)*g+f22*f41-f21*f42+((f11*f42-f12*f41)*a10+(f32*f41-f31*f42)*b10)*a10*r+((f12*f21-f11*f22)*a10+(f31*f22-f21*f32)*b10)*b10*r)

# d=(f32*f11-f31*f12)*(g**2)+(f21*f12+f31*f42-f32*f41-f22*f11)*g+f22*f41-f21*f42+((f11*f42-f12*f41)*a10+(f32*f41-f31*f42)*b10)*a10*r+((f12*f21-f11*f22)*a10+(f31*f22-f21*f32)*b10)*b10*r

# g1=f21*f12*a10-(f21*f32-f31*f22)*b10-f11*f22
# g2=f31*f12*a10-f11*f32

# r10=f32*g1+(a10*r*(f12*a10-f32*b10)-f22)*g2
# r20=f31*g1+(a10*r*(f11*a10-f31*b10)-f21)*g2
# import math
# #r10, r20 = int (input ()),int (input())
# w1=math.gcd(r10, d**2)
# #w2=math.gcd(r20, d)
# # print ('w1='+str(w1))
# # print(r10*r20/(d**2))
# #print ('w2='+str(w2))

# import numpy as np
# f11=(u1*z1+u10)*v1
# f12=(v1*z2+v10)*u1
# f21=(u2*z1+u20)*v2
# f22=(v2*z2+v20)*u2
# f31=(u1*z1+u10)*v2
# f32=(v2*z2+v20)*u1
# f41=(u2*z1+u20)*v1
# f42=(v1*z2+v10)*u2
# #matrix = [[f11*a10-f31*b10, f32*b10-f12*a10, 1],
# #          [f21-f31*g, f32*g-f22, a10*r], [f41-f11*g, f12*g-f42, b10*r]]
# #det = np.int32(np.linalg.det(matrix))
# #det = np.linalg.det(matrix)
# #print(type(det))

# y1=f21*f12-f22*f11+f31*f42-f32*f41-2*u1*u2*z1-u1*u20-u10*u2

# #q=np.int64(f22*f41-f21*f42+((f11*f42-f12*f41)*a10+(f32*f41-f31*f42)*b10)*a10*r+((f12*f21-f11*f22)*a10+(f31*f22-f21*f32)*b10)*b10*r)

# w2=f32*f11-f31*f12

# w1=f21*f12-f22*f11+f31*f42-f32*f41

# w0=f22*f41-f21*f42+((f11*f42-f12*f41)*a10+(f32*f41-f31*f42)*b10)*a10*r+((f12*f21-f11*f22)*a10+(f31*f22-f21*f32)*b10)*b10*r

# q1=-(u2**2)*z1+((v1*a10-v2*b10)**2)*r*z2-u2*u20+v1*v10*(a10**2)*r+v2*v20*(b10**2)*r-2*v1*v20*a10*b10*r-a10*b10*r

# d1=w2*(g**2)+w1*g+w0

# d2=-((u1*g-u2)**2)*z1+((v1*a10-v2*b10)**2)*r*z2-u1*u10*(g**2)+u1*u20*g+u10*u2*g-u2*u20+v1*v10*(a10**2)*r+v2*v20*(b10**2)*r-2*v1*v20*a10*b10*r-a10*b10*r

# delt=d1-d2

# DD=-u1*(u1*g-u2)*a10*z1-v2*(v1*a10-v2*b10)*z2-u1*u10*g*a10+v2*v20*b10+(u1*u20-v1*v20)*a10-((f11*a10-f31*b10)*(f32*g-f22)+(f12*a10-f32*b10)*(f21-f31*g))

# d_0=(f11*a10-f31*b10)*(f32*g-f22)+(f12*a10-f32*b10)*(f21-f31*g)

# d0=-u1*(u1*g-u2)*a10*z1-v2*(a10*v1-b10*v2)*z2-a10*u1*(u10*g-u20)-v20*(a10*v1-b10*v2)

# q1=-((u1*g-u2)**2)

# q2=((a10*v1-b10*v2)**2)*r

# q0=(u1*g-u2)*(u10*g-u20)-(a10*v1-b10*v2)*(a10*v10-b10*v20)*r



# delt2=q1*z1+q2*z2-q0-d1

# r_10=f32*g+a10*r*(f12*a10-f32*b10)-f22

# r_20=f31*g+a10*r*(f11*a10-f31*b10)-f21

# r10=(u1*v2*g-u2*v2+a10*r*u1*(a10*v1-b10*v2))*z2+u1*v20*g+a10*r*u1*(a10 *v10-b10 *v20)-u2*v20

# r20=(u1*v2*g-u2*v2+a10*r*u1*(a10*v1-b10*v2))*z1+u10*v2*g+a10*r*u10*(a10*v1-b10*v2)-u20*v2

# #delt3=

# delt4=r*(d0**2)-r10*r20

# w1=math.gcd(r20, r)

# print('r_10-r10='+str(r_10-r10))
# print('r_20-r20='+str(r_20-r20))
# print('d_0-d0='+str(d_0-d0))
# print('delt4='+str(delt4))

# print('q1*z1+q2*z2-q0='+str(q1*z1+q2*z2-q0))




# print('q0='+str(q0))
# print('q1='+str(q1))
# print('q2='+str(q2))

# print('r10='+str(r10))
# print('d0='+str((d0**2)-r10))

# print('r-r20='+str(r-r20))
# print('w1='+str(w1))
# print('r='+str(r))
# print('r20='+str(r20))

# gg=int(r20/r)

# print('gg='+str(gg))
# ------------------------------

# 1080
# 1160
# 1240
# 1320
# 1400
# 1480
# 1560
# 1640
# 1720
# 1800
# 1880
# 1960
# 2040
# 2120
# 2200
# 2280
# 2360
# 2440
# 2520
# 2600
# 2680
# 2760
# 2840
# 2920
# ----------------------

# -18488653437406190896788
# 18464075692016890756315
# delta1=-24577745389300140473


# -1113941369603723001531477
# 1112880198527927142857895
# delta2=-1061171075795858673582

# delta1/delta2 = 0.0231609642873721243828399197709299615887743486481063739358067655240312037104694349772085134458511659752381385

# u1/u2 = 0.2759160188821836533249065000570250745762730069928241429667486791740123718218774678804117271852591199519554290918
# --------------------------------

# my_set=set(my_list)
# for j in range (0,len(my_set)-1):
#     if my_set[j]:
#         my_list.count(1)
# -----------------------------------

# mylist = (x*x for x in range(3))
# for i in mylist :
#     print(i)
    
# for i in mylist :
#     print(i)

def find_min_number(*args):
    p=args[0]
    for i in args:
        if p>i:
            p=i
    return(p)

def summ(*args):
    tpl=args
    print(find_min_number(*tpl))

summ(1,2,3,4)